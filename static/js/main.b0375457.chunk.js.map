{"version":3,"sources":["assets/images/preloader.gif","components/Card/Card.js","components/MovieListing.js","components/Movie.js","App.js","reducers/movieReducers.js","store.js","actions/types.js","serviceWorker.js","index.js"],"names":["module","exports","Card","img","title","description","likes","imageLink","id","useState","isShown","setIsShown","className","src","alt","onMouseEnter","onMouseLeave","style","fontSize","MovieListing","buttonRef","useRef","Movies","setMovies","MainMovieImage","setMainMovieImage","Loading","setLoading","CurrentPage","setCurrentPage","useEffect","fetchMovies","window","addEventListener","handleScroll","endpoint","fetch","then","result","json","console","log","results","page","catch","error","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","current","click","display","alignItems","justifyContent","width","height","preloader","map","movie","index","to","key","backdrop_path","movieId","original_title","overview","vote_count","ref","onClick","Movie","props","setMovie","match","params","res","border","boxShadow","zIndex","borderRadius","App","exact","path","component","initialState","movies","store","createStore","state","action","type","payload","compose","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0375457.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.1e862516.gif\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nconst Card = ({ img, title, description, likes, id }) => {\n  const imageLink = `https://image.tmdb.org/t/p/w780${img}`;\n  const [isShown, setIsShown] = useState(false);\n  return (\n    <div>\n      <div className=\"card shadow-lg rounded bg-dark text-white border-0\">\n        <img src={imageLink} className=\"card-img-top\" alt=\"movie_pic\" />\n        <div\n          className=\"card-img-overlay\"\n          id=\"cardOverlay\"\n          onMouseEnter={() => setIsShown(true)}\n          onMouseLeave={() => setIsShown(false)}\n        >\n          {isShown && (\n            <div className=\"card-body bg-white m-0 \" id=\"cardBody\">\n              <h5 className=\"card-title \">{title}</h5>\n              <p className=\"truncate \">{description}</p>\n              <p className=\"\">\n                <small>\n                  <i\n                    className=\"las la-thumbs-up\"\n                    style={{ fontSize: \"20px\" }}\n                  ></i>\n                  {likes}\n                </small>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import React, { Component, useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMoviesAction } from \"../actions/movieActions\";\nimport { fetchMovies } from \"../Api\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport preloader from \"../assets/images/preloader.gif\";\nimport Card from \"./Card/Card\";\nfunction MovieListing() {\n  const buttonRef = useRef(null);\n\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [Loading, setLoading] = useState(true);\n  const [CurrentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/discover/movie?api_key=571da57303345f5f0911e883540343d4&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const fetchMovies = (endpoint) => {\n    fetch(endpoint)\n      .then((result) => result.json())\n      .then((result) => {\n        console.log(result);\n        // console.log(\"Movies\", ...Movies);\n        // console.log('result',...result.results)\n        setMovies([...Movies, ...result.results]);\n        setMainMovieImage(MainMovieImage || result.results[0]);\n        setCurrentPage(result.page);\n      }, setLoading(false))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = \"\";\n    setLoading(true);\n    console.log(\"CurrentPage\", CurrentPage);\n    endpoint = `https://api.themoviedb.org/3/discover/movie?api_key=571da57303345f5f0911e883540343d4&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1${\n      CurrentPage + 1\n    }`;\n    fetchMovies(endpoint);\n  };\n\n  const handleScroll = () => {\n    const windowHeight =\n      \"innerHeight\" in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight - 1) {\n      // loadMoreItems()\n      console.log(\"clicked\");\n      buttonRef.current.click();\n    }\n  };\n  return Loading ? (\n    <div\n      id=\"gifContainer\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"calc(100vh - 132px)\",\n      }}\n    >\n      <img src={preloader} id=\"preloaderGif\" alt=\"preloader\" />\n    </div>\n  ) : (\n    <div>\n      <div className=\"card-columns\">\n        {Movies &&\n          Movies.map((movie, index) => (\n            <Link to={`/movie/${movie.id}`} key={index}>\n              <Card\n                img={movie.backdrop_path}\n                movieId={movie.id}\n                title={movie.original_title}\n                description={movie.overview}\n                likes={movie.vote_count}\n              />\n            </Link>\n          ))}\n      </div>\n\n      {Loading && <div>Loading...</div>}\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <button\n          className=\"btn btn-danger loadMore\"\n          ref={buttonRef}\n          onClick={loadMoreItems}\n        >\n          Load More Movies\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieListing;\n","import React, { useEffect, useState } from \"react\";\n\nexport default function Movie(props) {\n  const [Movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const movieId = props.match.params.movieId;\n\n    fetch(\n      `https:/api.themoviedb.org/3/movie/${movieId}?api_key=571da57303345f5f0911e883540343d4&language=en-US`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setMovie(res);\n      });\n  }, []);\n  return (\n    <div>\n      <div\n        className=\"card mb-3\"\n        style={{\n          border: \"none\",\n          boxShadow: \"0 0 8px 4px rgba(0,0,0,0.1)\",\n          zIndex: \"2\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            <img\n              src={`https://image.tmdb.org/t/p/w780${Movie.backdrop_path}`}\n              className=\"card-img \"\n              alt=\"...\"\n              style={{\n                borderRadius: \"20px\",\n              }}\n            />\n          </div>\n          <div className=\"col-md-8 \">\n            <div className=\"card-body ml-4\">\n              <h5 className=\"card-title\">{Movie.title}</h5>\n              <p className=\"card-text\">{Movie.overview}</p>\n              <p className=\"card-text\">\n                <small className=\"\">\n                  <i\n                    className=\"las la-thumbs-up\"\n                    style={{ fontSize: \"20px\" }}\n                  ></i>\n                  {Movie.vote_count}\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MovieListing from \"./components/MovieListing\";\nimport Movie from \"./components/Movie\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header my-3\">\n    //     <h1 className=\"text-center\"> The Movie Database</h1>\n    //   </header>\n    //   <main className=\"m-5\">\n    //     <MovieListing />\n    //   </main>\n    // </div>\n    <Router>\n      <Switch>\n        <main className=\"mx-5\">\n          <h3 className=\"text-center my-3 \">Movie List</h3>\n          <Route exact path=\"/\" component={MovieListing} />\n          <Route path=\"/movie/:movieId\" component={Movie} />\n        </main>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { FETCH_MOVIES } from \"../actions/types\";\nconst initialState = {\n  movies: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      console.log(\"Debug\", action.type, action.payload, state);\n      return {\n        ...state,\n        movies: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, compose } from \"redux\";\n\nimport movieReducers from \"./reducers/movieReducers\";\n\nconst initialState = {};\n\nconst store = createStore(\n  movieReducers,\n  initialState,\n  compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;\n","export const FETCH_MOVIES = \"FETCH_MOVIES\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}